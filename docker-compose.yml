services:
    # PHP Service
    app:
        build:
            context: .
            dockerfile: docker/app/Dockerfile
            args:
                PGID: "${PGID:-1000}"
                PUID: "${PUID:-1000}"
        image: laravel-app
        container_name: "${APP_NAME}-app"
        restart: unless-stopped
        tty: true
        working_dir: /var/www/
        volumes:
            - ./:/var/www/
        depends_on:
            - db
        networks:
            - app-network
        environment:
            PHP_IDE_CONFIG: "serverName=${APP_NAME}"
        extra_hosts:
            - 'host.docker.internal:host-gateway'

    # Nginx Service
    webserver:
        image: nginx:stable-alpine
        container_name: "${APP_NAME}-webserver"
        restart: unless-stopped
        tty: true
        ports:
            - "${APP_PORT}:80"
            - "443:443"
        volumes:
            - ./:/var/www
            - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
        networks:
            - app-network

    # PostgresSQL Service
    db:
        image: postgres:17-alpine
        container_name: "${APP_NAME}-postgres"
        restart: unless-stopped
        tty: true
        ports:
            - "${FORWARD_DB_PORT}:5432"
        environment:
            POSTGRES_DB: "${DB_DATABASE}"
            POSTGRES_USER: "${DB_USERNAME}"
            POSTGRES_PASSWORD: "${DB_PASSWORD}"
        volumes:
            - ./docker/postgres/data:/var/lib/postgresql/data
        networks:
            - app-network

    # Composer Service
    composer:
        image: composer:latest
        container_name: "${APP_NAME}-composer"
        volumes:
            - ./:/var/www
        working_dir: /var/www
        depends_on:
            - app
        networks:
            - app-network

    # Node/NPM Service
    node:
        image: node:18
        container_name: "${APP_NAME}-node"
        volumes:
            - ./:/var/www
        working_dir: /var/www
        entrypoint: ['npm']
        networks:
            - app-network

    # Redis Service
    redis:
        image: redis:alpine
        container_name: "${APP_NAME}-redis"
        ports:
            - "6379:6379"
        networks:
            - app-network

    # Memcached Container
    memcached:
        image: memcached:latest
        container_name: "${APP_NAME}-memcached"
        networks:
            - app-network

volumes:
    postgres-data:
        driver: local

networks:
    app-network:
        driver: bridge
